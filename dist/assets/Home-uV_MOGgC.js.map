{"version":3,"file":"Home-uV_MOGgC.js","sources":["../../src/components/Layout/Footer.tsx","../../src/components/Layout/BackgroundSelector.tsx","../../src/pages/Home.tsx","../../src/utils/performance.ts"],"sourcesContent":["import React from 'react'\n\ninterface FooterProps {\n  className?: string\n}\n\nconst Footer: React.FC<FooterProps> = ({ className = '' }) => {\n  return (\n    <footer className={`footer ${className}`}>\n      <div className=\"text-center p-4 text-xs text-gameboy-light\">\n        <p className=\"mb-2\">\n          Made with React, TypeScript & Phaser 3\n        </p>\n        <p className=\"mb-2\">\n          Controls: Arrow Keys or WASD to move, Space to jump\n        </p>\n        <p>\n          Keyboard shortcuts: 1=Resume, 2=Portfolio, 3=Contact\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react'\n\ninterface Background {\n  id: string\n  name: string\n  url: string\n  description: string\n}\n\nconst backgrounds: Background[] = [\n  {\n    id: 'world-1',\n    name: 'Grass Land',\n    url: '/assets/backgrounds/mario-world-1.svg',\n    description: 'Classic green hills and blue sky'\n  },\n  {\n    id: 'world-2',\n    name: 'Desert Land',\n    url: '/assets/backgrounds/mario-world-2.svg',\n    description: 'Sandy dunes and golden sun'\n  },\n  {\n    id: 'world-3',\n    name: 'Underground',\n    url: '/assets/backgrounds/mario-world-3.svg',\n    description: 'Dark caves and glowing crystals'\n  },\n  {\n    id: 'world-4',\n    name: 'Castle',\n    url: '/assets/backgrounds/mario-world-4.svg',\n    description: 'Purple sky and fortress towers'\n  },\n  {\n    id: 'world-1-1',\n    name: 'World 1-1',\n    url: '/assets/backgrounds/bg-1-1.png',\n    description: 'Classic Super Mario Bros level design'\n  }\n]\n\ninterface BackgroundSelectorProps {\n  currentBackground: string\n  onBackgroundChange: (backgroundId: string) => void\n  className?: string\n}\n\nconst BackgroundSelector: React.FC<BackgroundSelectorProps> = ({\n  currentBackground,\n  onBackgroundChange,\n  className = ''\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const currentBg = backgrounds.find(bg => bg.id === currentBackground) || backgrounds[0]\n\n  return (\n    <div className={`background-selector relative ${className}`}>\n      <div className=\"text-center mb-2\">\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className=\"bg-gameboy-buttons hover:bg-gameboy-dark text-gameboy-darkest px-4 py-2 rounded text-xs font-gameboy transition-colors focus:outline-none focus:ring-2 focus:ring-gameboy-light\"\n          aria-label={`Current background: ${currentBg.name}. Click to change background`}\n          aria-expanded={isOpen}\n          aria-haspopup=\"listbox\"\n        >\n          {currentBg.name} â†“\n        </button>\n      </div>\n\n      {isOpen && (\n        <div \n          className=\"absolute top-full left-1/2 transform -translate-x-1/2 bg-gameboy-shell border-2 border-gameboy-buttons rounded-lg p-2 z-50 min-w-max\"\n          role=\"listbox\"\n          aria-label=\"Background options\"\n        >\n          <div className=\"space-y-2\">\n            {backgrounds.map((bg) => (\n              <button\n                key={bg.id}\n                onClick={() => {\n                  onBackgroundChange(bg.id)\n                  setIsOpen(false)\n                }}\n                className={`block w-full text-left px-3 py-2 text-xs rounded transition-colors focus:outline-none focus:ring-2 focus:ring-gameboy-light ${\n                  bg.id === currentBackground\n                    ? 'bg-gameboy-light text-gameboy-darkest'\n                    : 'bg-gameboy-buttons text-gameboy-darkest hover:bg-gameboy-dark'\n                }`}\n                role=\"option\"\n                aria-selected={bg.id === currentBackground}\n              >\n                <div className=\"font-gameboy mb-1\">{bg.name}</div>\n                <div className=\"text-xs opacity-75\">{bg.description}</div>\n              </button>\n            ))}\n          </div>\n          \n          <button\n            onClick={() => setIsOpen(false)}\n            className=\"mt-2 w-full bg-gameboy-dark text-gameboy-lightest px-2 py-1 rounded text-xs hover:bg-gameboy-darkest transition-colors focus:outline-none focus:ring-2 focus:ring-gameboy-light\"\n          >\n            Close\n          </button>\n        </div>\n      )}\n\n      {/* Background preview overlay - click outside to close */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 z-40\"\n          onClick={() => setIsOpen(false)}\n          aria-hidden=\"true\"\n        />\n      )}\n    </div>\n  )\n}\n\nexport { backgrounds }\nexport default BackgroundSelector","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { GameBoyShell } from '../components/GameBoy'\nimport { Footer, BackgroundSelector } from '../components/Layout'\nimport { preloadCriticalResources, measureWebVitals } from '../utils/performance'\nimport { initAccessibility, gameAccessibility, highContrastSupport, reducedMotionSupport } from '../utils/accessibility'\nimport EventBus, { GAME_EVENTS } from '../components/Game/EventBus'\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate()\n  const [currentBackground, setCurrentBackground] = useState('world-1')\n  const [gameTheme, setGameTheme] = useState('overworld')\n\n  // Initialize performance optimizations and accessibility\n  useEffect(() => {\n    preloadCriticalResources()\n    measureWebVitals()\n    initAccessibility()\n    highContrastSupport.applyHighContrast()\n    reducedMotionSupport.applyReducedMotion()\n    gameAccessibility.announceContentLoad('home')\n\n    // Listen for game area changes to update background theme\n    const handleAreaChange = (data: { area: number; theme: string }) => {\n      console.log('Area changed:', data)\n      setGameTheme(data.theme)\n    }\n\n    EventBus.on(GAME_EVENTS.AREA_CHANGED, handleAreaChange)\n\n    // Cleanup event listener on unmount\n    return () => {\n      EventBus.off(GAME_EVENTS.AREA_CHANGED, handleAreaChange)\n    }\n  }, [])\n\n  const handleBackgroundChange = (backgroundId: string) => {\n    setCurrentBackground(backgroundId)\n  }\n\n  const handleContentTrigger = (contentType: string) => {\n    console.log(`Content triggered: ${contentType}`)\n    \n    // Navigate to the appropriate page\n    switch (contentType) {\n      case 'resume':\n        navigate('/resume')\n        break\n      case 'portfolio':\n        navigate('/portfolio')\n        break\n      case 'contact':\n        navigate('/contact')\n        break\n      default:\n        console.log(`Unknown content type: ${contentType}`)\n    }\n  }\n\n  // Get background style based on game theme\n  const getThemeBackground = () => {\n    const themes = {\n      overworld: 'linear-gradient(to bottom, #87CEEB, #98FB98)', // Sky blue to light green\n      underground: 'linear-gradient(to bottom, #2F4F4F, #000000)', // Dark slate gray to black\n      sky: 'linear-gradient(to bottom, #87CEFA, #FFFFFF)', // Light sky blue to white\n      castle: 'linear-gradient(to bottom, #8B0000, #2F2F2F)' // Dark red to dark gray\n    }\n    return themes[gameTheme as keyof typeof themes] || themes.overworld\n  }\n\n  return (\n    <div \n      className=\"min-h-screen font-gameboy text-gameboy-lightest relative transition-all duration-1000\"\n      style={{\n        background: getThemeBackground(),\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      {/* Dark overlay for better text readability */}\n      <div className=\"absolute inset-0 bg-gameboy-darkest bg-opacity-75\"></div>\n      \n      {/* Content layer */}\n      <div className=\"relative z-10\">\n        {/* Skip navigation */}\n        <a href=\"#main-content\" className=\"skip-link\">\n          Skip to main content\n        </a>\n        \n        {/* Header removed to provide more space for GameBoy interface */}\n\n        {/* Main content */}\n        <main id=\"main-content\" className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n          {/* GameBoy Component - Now the primary focus */}\n          <GameBoyShell \n            className=\"mx-auto\" \n            onContentTrigger={handleContentTrigger}\n          />\n\n          {/* Background Selector - Moved to a less prominent position */}\n          <div className=\"mt-6 opacity-75\">\n            <BackgroundSelector\n              currentBackground={currentBackground}\n              onBackgroundChange={handleBackgroundChange}\n              className=\"scale-75\"\n            />\n          </div>\n\n          {/* Direct navigation links for accessibility */}\n          <nav className=\"mt-8\" aria-label=\"Alternative navigation links\">\n            <div className=\"text-xs text-gameboy-light mb-2\">\n              Alternative navigation (if you prefer not to use the game):\n            </div>\n            <ul className=\"flex space-x-4 text-xs\">\n              <li>\n                <a \n                  href=\"/resume\" \n                  className=\"text-gameboy-light hover:text-gameboy-lightest underline focus:outline-none focus:ring-2 focus:ring-gameboy-light rounded px-1\"\n                  aria-describedby=\"resume-desc\"\n                >\n                  Resume\n                </a>\n                <span id=\"resume-desc\" className=\"sr-only\">View my professional resume and work experience</span>\n              </li>\n              <li>\n                <a \n                  href=\"/portfolio\" \n                  className=\"text-gameboy-light hover:text-gameboy-lightest underline focus:outline-none focus:ring-2 focus:ring-gameboy-light rounded px-1\"\n                  aria-describedby=\"portfolio-desc\"\n                >\n                  Portfolio\n                </a>\n                <span id=\"portfolio-desc\" className=\"sr-only\">Browse my projects and technical work</span>\n              </li>\n              <li>\n                <a \n                  href=\"/contact\" \n                  className=\"text-gameboy-light hover:text-gameboy-lightest underline focus:outline-none focus:ring-2 focus:ring-gameboy-light rounded px-1\"\n                  aria-describedby=\"contact-desc\"\n                >\n                  Contact\n                </a>\n                <span id=\"contact-desc\" className=\"sr-only\">Get in touch with me</span>\n              </li>\n            </ul>\n          </nav>\n        </main>\n        \n        {/* Footer */}\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default Home","/**\n * Performance optimization utilities\n * Handles resource preloading, lazy loading, and performance monitoring\n */\n\n// Preload critical resources\nexport const preloadCriticalResources = () => {\n  if (typeof window === 'undefined') return\n\n  // Preload critical game assets when user interacts with the page\n  const preloadGameAssets = () => {\n    const link = document.createElement('link')\n    link.rel = 'prefetch'\n    link.href = '/assets/sprites/mario-atlas.svg'\n    link.as = 'image'\n    document.head.appendChild(link)\n  }\n\n  // Preload on user interaction (hover, touch, etc.)\n  const events = ['mouseenter', 'touchstart', 'focus']\n  const gameArea = document.querySelector('.gameboy-shell')\n  \n  if (gameArea) {\n    events.forEach(event => {\n      gameArea.addEventListener(event, preloadGameAssets, { once: true })\n    })\n  }\n}\n\n// Web Vitals monitoring (for development)\nexport const measureWebVitals = () => {\n  if (process.env.NODE_ENV !== 'development') return\n\n  // Measure First Contentful Paint\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries()\n    entries.forEach((entry) => {\n      console.log(`FCP: ${entry.startTime.toFixed(2)}ms`)\n    })\n  }).observe({ entryTypes: ['paint'] })\n\n  // Measure Largest Contentful Paint\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries()\n    entries.forEach((entry) => {\n      console.log(`LCP: ${entry.startTime.toFixed(2)}ms`)\n    })\n  }).observe({ entryTypes: ['largest-contentful-paint'] })\n\n  // Measure Cumulative Layout Shift\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries()\n    entries.forEach((entry: any) => {\n      console.log(`CLS: ${entry.value.toFixed(4)}`)\n    })\n  }).observe({ entryTypes: ['layout-shift'] })\n}\n\n// Image lazy loading utility\nexport const lazyLoadImages = () => {\n  if ('IntersectionObserver' in window) {\n    const imageObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const img = entry.target as HTMLImageElement\n          img.src = img.dataset.src || ''\n          img.classList.remove('lazy')\n          imageObserver.unobserve(img)\n        }\n      })\n    })\n\n    document.querySelectorAll('img[data-src]').forEach((img) => {\n      imageObserver.observe(img)\n    })\n  }\n}\n\n// Service worker registration for caching\nexport const registerServiceWorker = async () => {\n  if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n    try {\n      await navigator.serviceWorker.register('/sw.js')\n      console.log('Service Worker registered successfully')\n    } catch (error) {\n      console.log('Service Worker registration failed:', error)\n    }\n  }\n}\n\n// Memory optimization - cleanup unused resources\nexport const cleanupResources = () => {\n  // Clean up any unused Phaser textures or sounds\n  if (typeof window !== 'undefined' && (window as any).phaserGame) {\n    // Could implement texture cleanup here if needed\n    console.log('Cleaning up game resources...')\n  }\n}"],"names":["Footer","className","jsx","children","jsxs","backgrounds","id","name","url","description","BackgroundSelector","currentBackground","onBackgroundChange","isOpen","setIsOpen","useState","currentBg","find","bg","onClick","role","map","Home","navigate","useNavigate","setCurrentBackground","gameTheme","setGameTheme","useEffect","window","preloadGameAssets","link","document","createElement","rel","href","as","head","appendChild","events","gameArea","querySelector","forEach","event","addEventListener","once","preloadCriticalResources","initAccessibility","highContrastSupport","applyHighContrast","reducedMotionSupport","applyReducedMotion","gameAccessibility","announceContentLoad","handleAreaChange","data","theme","EventBus","on","GAME_EVENTS","AREA_CHANGED","off","style","background","themes","overworld","underground","sky","castle","getThemeBackground","backgroundSize","backgroundPosition","backgroundRepeat","GameBoyShell","onContentTrigger","contentType","backgroundId"],"mappings":"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"}